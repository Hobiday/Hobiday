server {
    listen 80;
    server_name hobiday.site;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name hobiday.site;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/hobiday.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<your domain>/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # NGINX가 받은 모든 요청을 'http://hobi-app:8080'으로 프록시하여 처리하도록 지시합니다.
        proxy_pass http://hobi-app:8080;

        # 프록시된 요청에 'Host' 헤더를 추가하여 백엔드 서버에 전달합니다.
        proxy_set_header Host $host;

        # 프록시된 요청에 클라이언트의 실제 IP 주소를 'X-Real-IP' 헤더에 추가하여 백엔드 서버에 전달합니다.
        proxy_set_header X-Real-IP $remote_addr;

        # 프록시된 요청에 클라이언트의 원래 IP 주소를 'X-Forwarded-For' 헤더에 추가하여 백엔드 서버에 전달합니다.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # 프록시된 요청에 클라이언트가 사용하는 프로토콜(HTTP 또는 HTTPS)를 'X-Forwarded-Proto' 헤더에 추가하여 백엔드 서버에 전달합니다.
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}